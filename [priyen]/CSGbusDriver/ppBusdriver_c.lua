------------------------------------------------------------------------------------
--  CSG
--  v1.0
--  ppBusdriver_c.luac (client-side)
--  Bus Driver Job
--  Priyen Patel
------------------------------------------------------------------------------------

local localPlayer = getLocalPlayer()
local jobInProgress = 0
local routes = {"justStarted"}
local activeRoute = 999
local nextStopString = ""
local currentStopIndex = 999
local routeLength = 999
local markers = { }
local markers2 = { }
local bus = 0
local blip = 0
local fare = 100
local totalRankPoints = 0
local minfare = 0
local maxfare = 2500
local distMultiplier = 1.8
local canStart = true
local gui = { }
local rankI = 1
local ranks = {
	{"Bus Driver In Training",0,0,"Base Salary"},
	{"New Bus Driver",15,0,"Base Salary"},
	{"Trained Bus Driver",45,0,"Base Salary"},
	{"Experienced Bus Driver",200,0,"Base Salary + 2% Bonus"},
	{"Senior Bus Driver",300,0,"Base Salary + 5% Bonus"},
	{"Lead Bus Driver",400,0,"Base Salary + 8% Bonus"},
	{"Chief Bus Driver",500,0,"Base Salary + 11% Bonus"},
	{"Head Bus Driver",1000,0,"Base Salary + 15% Bonus"},
	{"SA Busing CEO",2000,0,"Base Salary + 23% Bonus"},
}
local databaseStats = {}

local passengers = { }
function jobmenu()
    if exports.server:getPlayerOccupation() ~= "Bus Driver" then return end
	if getTeamName(getPlayerTeam(localPlayer)) ~= "Civilian Workers" then return end
	if guiGetVisible(gui["_root"]) == true then
		hideGUI()
	else
		showGUI()
	end

end
bindKey ( "F5", "down", jobmenu)

-------------------------------------
-- Code generated by DKR QT to Lua 0.1.7 --
-- Source: bus driver.ui --
-- Date:  30/09/2012 - 11:29:15 --
-------------------------------------

function build_MainWindow()

	gui = {}
	gui._placeHolders = {}

	local screenWidth, screenHeight = guiGetScreenSize()
	local windowWidth, windowHeight = 663, 375
	local left = screenWidth/2 - windowWidth/2
	local top = screenHeight/2 - windowHeight/2
	gui["_root"] = guiCreateWindow(left, top, windowWidth, windowHeight, "Community of Social Gaming ~ Bus Driver", false)
	guiWindowSetSizable(gui["_root"], false)

	gui["tabWidget"] = guiCreateTabPanel(10, 45, 641, 291, false, gui["_root"])

	gui["tab"] = guiCreateTab("Main", gui["tabWidget"])

	gui["listRoute"] = guiCreateGridList(10, 10, 221, 181, false, gui["tab"])
	guiGridListSetSortingEnabled(gui["listRoute"], false)
	gui["listRoute_col0"] = guiGridListAddColumn(gui["listRoute"], "Route", 0.85)

	local listRoute_row = nil

	gui["listStops"] = guiCreateGridList(240, 10, 391, 181, false, gui["tab"])
	guiGridListSetSortingEnabled(gui["listStops"], false)
	gui["listStops_col0"] = guiGridListAddColumn(gui["listStops"], "Stop", 0.6)
	gui["listStops_col1"] = guiGridListAddColumn(gui["listStops"], "Total Route Distance", 0.25)

	local listStops_row = nil

	gui["btnStart"] = guiCreateButton(10, 200, 191, 23, "Start", false, gui["tab"])
	cbVoice = guiCreateCheckBox(240,200,200,23,"Automated Annoucements",true,false,gui["tab"])
	cbBusGps = guiCreateCheckBox(240,230,200,23,"GPS Support",true,false,gui["tab"])
	gui["btnEnd"] = guiCreateButton(10, 230, 191, 23, "End", false, gui["tab"])

	--gui["btnSetFare"] = guiCreateButton(240, 200, 191, 23, "Set Fare:", false, gui["tab"])

	--gui._placeHolders["txtFare"] = {left = 440, top = 200, width = 191, height = 21, parent = gui["tab"]}

	--gui["barNextRank"] =  guiCreateProgressBar(330, 230, 301, 23, false, gui["tab"])
	--guiProgressBarSetProgress(gui["barNextRank"], 24)

	--gui["label_2"] = guiCreateLabel(240, 230, 81, 21, "Progress - Rank:", false, gui["tab"])
	--guiLabelSetHorizontalAlign(gui["label_2"], "left", false)
	--guiLabelSetVerticalAlign(gui["label_2"], "center")

	gui["tab_2"] = guiCreateTab("Stats", gui["tabWidget"])

	gui["listStats"] = guiCreateGridList(10, 10, 611, 221, false, gui["tab_2"])
	guiGridListSetSortingEnabled(gui["listStats"], false)
	gui["listStats_col0"] = guiGridListAddColumn(gui["listStats"], "Stat", 0.4)
	gui["listStats_col1"] = guiGridListAddColumn(gui["listStats"], "Value", 0.15)
	gui["listStats_col2"] = guiGridListAddColumn(gui["listStats"], "Rank Value / point", 0.15)
	gui["listStats_col3"] = guiGridListAddColumn(gui["listStats"], "Total Rank Value", 0.15)

	local listStats_row = nil

	gui["lblTotalPoints"] = guiCreateLabel(10, 240, 150, 16, "Total Points:", false, gui["tab_2"])
	guiLabelSetHorizontalAlign(gui["lblTotalPoints"], "left", false)
	guiLabelSetVerticalAlign(gui["lblTotalPoints"], "center")

	gui["lblTotalRankPoints"] = guiCreateLabel(475, 240, 150, 20, "Total Rank Points:", false, gui["tab_2"])
	guiLabelSetHorizontalAlign(gui["lblTotalRankPoints"], "left", false)
	guiLabelSetVerticalAlign(gui["lblTotalRankPoints"], "center")

	gui["tab_3"] = guiCreateTab("Ranks", gui["tabWidget"])

	gui["listRanks"] = guiCreateGridList(10, 10, 611, 221, false, gui["tab_3"])
	guiGridListSetSortingEnabled(gui["listRanks"], false)
	gui["listRanks_col0"] = guiGridListAddColumn(gui["listRanks"], "Rank", 0.3)
	gui["listRanks_col1"] = guiGridListAddColumn(gui["listRanks"], "Points Needed", 0.15)
	gui["listRanks_col2"] = guiGridListAddColumn(gui["listRanks"], "Net Value", 0.15)
	gui["listRanks_col3"] = guiGridListAddColumn(gui["listRanks"], "Benifits", 0.25)

	local listRanks_row = nil

	listRanks_row = guiGridListAddRow(gui["listRanks"])
	guiGridListSetItemText(gui["listRanks"], listRanks_row, gui["listRanks_col0"], "", false, false )


	gui["lblCurrentRank"] = guiCreateLabel(10, 240, 231, 16, "Current Rank:", false, gui["tab_3"])
	guiLabelSetHorizontalAlign(gui["lblCurrentRank"], "left", false)
	guiLabelSetVerticalAlign(gui["lblCurrentRank"], "center")

	gui["tab_4"] = guiCreateTab("Documentation", gui["tabWidget"])

	gui["memoDoc"] = guiCreateMemo(10, 10, 621, 251, "Bus Driver Information Memo\n\nYour Job: Transport Citizens around SA, from one place to another.\n\nHow: Use your control panel to begin / end various routes assigned to you by the SA bus Authority.\n         You can charge people to ride your bus, or let them on for free.\n         Remember: You are only charging them to ENTER the bus. They can ride for as long as they want to\n         As long as they pay the initial fee. To change the fare, type:\n         /setfare amount . Failure to pay the fee by passengers will result in them being wanted by the police.\n        \nRanks: In your panel you have availble to you a stats list. Each stat point has a rank value and your total rank\n            Value will determine your rank. Refer to rank menu to find the list of ranks and benifits.\n\n \n * You cannot collect fare or drive routes while off-shift \n * You can enable or disable automated annoucements via the main menu", false, gui["tab_4"])
	guiMemoSetReadOnly(gui["memoDoc"],true)
	gui["lblTopName"] = guiCreateLabel(260, 25, 200, 16, ""..getPlayerName(localPlayer).." -- Fare $500", false, gui["_root"])
	guiLabelSetHorizontalAlign(gui["lblTopName"], "left", false)
	guiLabelSetVerticalAlign(gui["lblTopName"], "center")
    gui["btnExit"] = guiCreateButton(10, 345, 641, 23, "Exit", false, gui["_root"])
    addEventHandler("onClientGUIClick", gui["btnStart"], assignJobButton)
    addEventHandler("onClientGUIClick", gui["btnEnd"], endJobButton)
    addEventHandler("onClientGUIClick", gui["btnExit"], hideGUI2)
	addEventHandler("onClientGUIClick", cbBusGps, gpsCheckBoxChange)

	return gui, windowWidth, windowHeight
end

function gpsCheckBoxChange()
	if source ~= cbBusGps then return end
	if guiCheckBoxGetSelected(cbBusGps) == true then
		if jobInProgress == 1 then
			local x,y,z = getElementPosition(blip)
			exports.CSGgps:setDestination(x,y,z,"Bus Driver Stop","",{false,true,false,true})
		end
	else
		if jobInProgress == 1 then
			exports.CSGgps:resetDestination()
		end
	end
end

function hideGUI2()
	if source ~= gui["btnExit"] then return end
	hideGUI()
end

function assignJobButton()
	if source ~= gui["btnStart"] then return end
    if jobInProgress == 1 then return end
	if getTeamName(getPlayerTeam(localPlayer)) ~= "Civilian Workers" then  exports.DENdxmsg:createNewDxMessage("You can't start a route when your off shift!",255,0,0) return end
	local veh = getPedOccupiedVehicle(localPlayer)
    if veh == false then  exports.DENdxmsg:createNewDxMessage("You must be in a bus to start a route!",255,0,0) return end
	if canStart == false then
		 exports.DENdxmsg:createNewDxMessage("Please wait a few seconds before trying to start a Route again!",255,0,0)
	return
	end
	local id = getElementModel(veh)

    if id == 431 or id == 437 then
		if getVehicleController(veh) ~= localPlayer then  exports.DENdxmsg:createNewDxMessage("This is not your bus!",255,0,0) return end
        local row,column = guiGridListGetSelectedItem(gui["listRoute"])
        if column == false or row == false then return end
        startRoute(row+1)
        bus = getPedOccupiedVehicle(localPlayer)
    end
end

function startRoute(i)
    local t = routes[i]
    if t == nil then return end
		addStat("Routes Attempted",1)
    for k,v in ipairs(t) do
        local x = t[k][1]
        local y = t[k][2]
        local z = t[k][3]
        local x = math.floor(x+0.5)
        local y = math.floor(y+0.5)
        local z = math.floor(z+0.5)
        local marker = createMarker(x,y,z-0.5,"cylinder", 4,255,255,0,100)
        markers[k] = marker
        addEventHandler("onClientMarkerHit", marker, hitBusStop)
        local marker2 = createMarker(x,y,z,"cylinder",60,0,0,0,0)
        markers2[k] = marker2
        addEventHandler("onClientMarkerHit", marker2, hitApprochMarker)
        if k == 1 then
            bus = getPedOccupiedVehicle(localPlayer)
			jobInProgress = 1
			currentStopIndex = 1
			routeLength = #t
			activeRoute = i
             exports.DENdxmsg:createNewDxMessage("Bus Route "..routes[activeRoute]["name"].." Started!",0,255,0)
            blip = createBlip(x,y,z,58)
			if guiCheckBoxGetSelected(cbBusGps) == true then
				exports.CSGgps:resetDestination()
				exports.CSGgps:setDestination(x,y,z,"Bus Driver Stop","None",{false,true,false,true})
			end
			prevX,prevY,prevZ = getElementPosition(localPlayer)
            nextStopString = ""..x.." "..y.." "..z..""
			voiceString = ""..routes[activeRoute][currentStopIndex][4]..""
			voiceMonitorTimer = setTimer(monitorVoice,1000,0)
            local msg = "Next Stop : "..getZoneName(x,y,z).." ("..routes[activeRoute][currentStopIndex][4]..")"
			local r,g,b = 0,255,0
            announceTimer = setTimer(triggerServerEvent,2000,1,"announceToAllPassengers",root,msg,getVehicleOccupants((getPedOccupiedVehicle(localPlayer))),r,g,b)
        end
    end
	refresh()
end

function refresh()
	updateMainMenu()
	updateStatsMenu()
	updateRanksMenu()
end

function hitApprochMarker(hitPlayer, dim)
 if hitPlayer ~= localPlayer then return end
 if isPedInVehicle(hitPlayer) == true then
        if getElementModel(getPedOccupiedVehicle(hitPlayer)) == 431 or getElementModel(getPedOccupiedVehicle(hitPlayer)) == 437 then
            --if getPedOccupiedVehicle(localPlayer) ~= bus then  exports.DENdxmsg:createNewDxMessage("This is not the same bus as when you started the route.",255,0,0) return end
            if getVehicleController(getPedOccupiedVehicle(hitPlayer)) == localPlayer then
                local veh = getPedOccupiedVehicle(hitPlayer)
                local x,y,z = getElementPosition(source)
                local x = math.floor(x+0.5)
                local y = math.floor(y+0.5)
                local z = math.floor(z+0.5)
                local stop = tostring(""..x.." "..y.." "..z.."")
                if stop == nextStopString then
                local msg = "Approching Bus Stop "..getZoneName(x,y,z).." ("..routes[activeRoute][currentStopIndex][4]..")"
				local r,g,b = 255,255,0
				if activeRoute == 7 then
					voiceString = "Arriving at "..routes[activeRoute][currentStopIndex][4]..""
					triggerServerEvent("CSGbusDriverSayVoice",localPlayer,voiceString,true)
				end
                triggerServerEvent("announceToAllPassengers",localPlayer,msg,getVehicleOccupants(veh),r,g,b)
                end
            end
        end
    end

 end

function speedCheck(veh)
	local speedx, speedy, speedz = getElementVelocity (veh)
	local realSpeed = (speedx^2 + speedy^2 + speedz^2)^(0.5)
	local kmh = realSpeed*180
	if kmh <= 30 then return true else return false end
end

function hitBusStop(hitPlayer, dim)
    if isPedInVehicle(hitPlayer) == true then
		local veh = getPedOccupiedVehicle(hitPlayer)
        if getElementModel(veh) == 431 or getElementModel(veh) == 437 then
            if getVehicleController(veh) == localPlayer then
				if speedCheck(veh) == false then  exports.DENdxmsg:createNewDxMessage("Your going too fast! You missed the bus stop!",255,0,0) return end
                local x,y,z = getElementPosition(source)
                local x = math.floor(x+0.5)
                local y = math.floor(y+0.5)
                local z = math.floor(z+0.5)
                local stop = tostring(""..x.." "..y.." "..z.."")
				local msg1 = "Arrived at Bus Stop ("..routes[activeRoute][currentStopIndex][4]..")"
				local r1,g1,b1 = 0,255,0
				local r2,g2,b2 = 0,255,0
				local vehOccupants = getVehicleOccupants(getPedOccupiedVehicle(localPlayer))
                if stop == nextStopString then
					addStat("Bus Stops Arrived To",1)
					addStat("Total Bus Route Distance Traveled",routes[activeRoute][currentStopIndex][6])
                    if currentStopIndex == routeLength then
						local msg2 = "Please wait while passengers Exit. This is the final stop."
						triggerServerEvent("CSGbusDriverSayVoice",localPlayer,"Please exit the bus. This is the final Stop.",true)
						addStat("Routes Completed",1)
						triggerServerEvent("announceToAllPassengers",localPlayer,msg1,vehOccupants,r1,g1,b1)
						triggerServerEvent("announceToAllPassengers",localPlayer,msg2,vehOccupants,r2,g2,b2)
						setElementFrozen(veh, true)
						setTimer(setElementFrozen,4000,1,veh,false)
						fadeCamera ( false, 3.0, 0, 0, 0 )
						setTimer ( fadeCamera, 3000, 1, true, 3.0 )
						local pay0 = (distMultiplier*(routes[activeRoute][currentStopIndex][7]))
						local pay = math.floor(math.random(pay0*0.7,pay0*1.1)+0.5)
						triggerServerEvent("payBusDriver",localPlayer,pay,rankI)
						if guiCheckBoxGetSelected(cbBusGps) == true then
							exports.CSGgps:resetDestination()
						end
						endAssignment()
						return
                    end
				local mgs2 = "Please wait while passengers Enter / Exit."
				triggerServerEvent("announceToAllPassengers",localPlayer,msg1,vehOccupants,r1,g1,b1)
				triggerServerEvent("announceToAllPassengers",localPlayer,msg2,vehOccupants,r2,g2,b2)
                currentStopIndex = currentStopIndex + 1
                destroyElement(blip)
                local nx = routes[activeRoute][currentStopIndex][1]
                local ny = routes[activeRoute][currentStopIndex][2]
                local nz = routes[activeRoute][currentStopIndex][3]
                local nx = math.floor(nx+0.5)
                local ny = math.floor(ny+0.5)
                local nz = math.floor(nz+0.5)
                blip = createBlip(nx,ny,nz,58)
                nextStopString = ""..nx.." "..ny.." "..nz..""
                setElementFrozen(veh, true)
                setTimer(setElementFrozen,4000,1,veh,false)
                fadeCamera ( false, 3.0, 0, 0, 0 )
                setTimer ( fadeCamera, 3000, 1, true, 3.0 )
				prevX,prevY,prevZ = x,y,z
				if guiCheckBoxGetSelected(cbBusGps) == true then
					exports.CSGgps:resetDestination()
					exports.CSGgps:setDestination(nx,ny,nz,"Bus Driver Stop","None",{false,true,false,true})
				end
				if isTimer(voiceMonitorTimer) == true then killTimer(voiceMonitorTimer) end
                local msg1 = "Next Stop : "..getZoneName(nx,ny,nz).." ("..routes[activeRoute][currentStopIndex][4]..")"
				voiceString = ""..routes[activeRoute][currentStopIndex][4]..""
				voiceMonitorTimer = setTimer(monitorVoice,1000,0)
                announceTimer = setTimer (triggerServerEvent,3900,1,"announceToAllPassengers",localPlayer,msg1,getVehicleOccupants(veh),r1,g1,b1)
				setTimer (function () sayIncorrect = true end,3000,1)
				sayIncorrect = false
                else
					if sayIncorrect == true then
						 exports.DENdxmsg:createNewDxMessage("Go to the blip on your map! This is the incorrect bus stop.",255,0,0)
					end
                end
            end
        end
    end
end

function monitorVoice()
	local x,y,z = getElementPosition(localPlayer)
	if isPedInVehicle(localPlayer) == false then killTimer(voiceMonitorTimer) return end
	local dist = getDistanceBetweenPoints3D(x,y,z,prevX,prevY,prevZ)
	if dist > 18 then
		if guiCheckBoxGetSelected(cbVoice) == true then
			if activeRoute == 7 then
			triggerServerEvent("CSGbusDriverSayVoice",localPlayer,"This is a Ex press Vehicle. Next Stop: "..voiceString.."",true)
			else
			triggerServerEvent("CSGbusDriverSayVoice",localPlayer,voiceString,false)
			end
		end
		if isTimer(voiceMonitorTimer) then killTimer(voiceMonitorTimer) return end
	end
end

function sayVoice(str)
	--[[if isElement(currentVoice) then
		if getSoundPosition(currentVoice) >= 1500 then currentVoice = "" end
		if isTimer(sayVoiceTimer) == false then
		toSay = str
		sayVoiceTimer = setTimer(sayVoice,1000,0,toSay)
		end
		return
	else
		if isTimer(sayVoiceTimer) then killTimer(sayVoiceTimer) end
	end
	if isTimer(sayVoiceTimer) then killTimer(sayVoiceTimer) end --]]
	local x,y,z = getElementPosition(localPlayer)
	currentVoice = playSound(str,x,y,z)
end
addEvent("CSGbusDriverSayVoiceClient",true)
addEventHandler("CSGbusDriverSayVoiceClient",localPlayer,sayVoice)


function endJobButton()
	if source ~= gui["btnEnd"] then return end
    if jobInProgress == 0 then return end
    endAssignment()
    hideGUI()
    showGUI()
end

function endAssignment()
	if jobInProgress == 1 then
		canStart = false
		setTimer(function() canStart=true end,30000,1)
		 exports.DENdxmsg:createNewDxMessage("Bus Route Ended.",255,255,0)
		if guiCheckBoxGetSelected(cbBusGps) == true then
			exports.CSGgps:resetDestination()
		end

	end
	if isTimer(announceTimer) then killTimer(announceTimer) end
	if isTimer(voiceMonitorTimer) then killTimer(voiceMonitorTimer) end
    jobInProgress = 0
    currentStopIndex = 999
    routeLength = 999
    activeRoute = 999
    if isElement(blip) then destroyElement(blip) end
    for k,v in pairs(markers) do
        if isElement(v) then
        destroyElement(v)
        end
    end
    for k,v in pairs(markers2) do
        if isElement(v) then
        destroyElement(v)
        end
    end
    bus = 0
end

function updateMainMenu()
	guiGridListClear(gui["listStops"])
	guiGridListClear(gui["listRoute"])
	local routeNameText = ""
    for k,v in pairs(routes) do
		local routeName = routes[k]["name"]
        local stop = ""
        if k == activeRoute then
			local t = routes[k]
				for k,v in ipairs(t) do
					local x,y,z = t[k][1],t[k][2],t[k][3]
					local x = math.floor(x+0.5)
					local y = math.floor(y+0.5)
					local z = math.floor(z+0.5)
					stop = tostring(""..x.." "..y.." "..z.."")
					local areaName = getZoneName(x,y,z)
					if stop == nextStopString then
						areaName = ""..areaName.." ---Next---"
					end
					local row = guiGridListAddRow(gui["listStops"])
					guiGridListSetItemText(gui["listStops"], row, 1, ""..areaName.."", false, false )
					guiGridListSetItemText(gui["listStops"], row, 2, ""..t[k][7].."", false, false )
				end
			routeNameText = ""..tostring(routeName).." (Active)"
    	else
			routeNameText = ""..tostring(routeName)..""
		end
		local row = guiGridListAddRow(gui["listRoute"])
		guiGridListSetItemText(gui["listRoute"], row, gui["listRoute_col0"], ""..routeNameText.."", false, false )
    end
end

local nameToI = {
	["Bus Stops Arrived To"] = 1,
	["Routes Attempted"] = 2,
	["Routes Completed"] = 3,
	["Money Collected From Fare"] = 4,
	["Money Earned from Routes"] = 5,
	["Died on Job off Route"] = 6,
	["Died on Job on Route"] = 7,
	["Total Bus Route Distance Traveled"] = 8,
	["Times someone has refused fare"] = 9,
	["Times someone couldn't afford fare"] = 10,
	["Times someone paid full fare"] = 11,
	["Times freeloaders entered for free"] = 12,
}

function addStat(k,v)
	databaseStats[nameToI[k]] = databaseStats[nameToI[k]]+v
	updateStatsMenu()
	triggerServerEvent("CSGbusDriverSetStat",localPlayer,tostring(k),v,"","",databaseStats,totalRankPoints)
end
addEvent("CSGbusDriveraddStat",true)
addEventHandler("CSGbusDriveraddStat",localPlayer,addStat)

function updateStatsMenu()
	guiGridListClear(gui["listStats"])
	stats = {
		["Bus Stops Arrived To"] = {databaseStats[nameToI["Bus Stops Arrived To"]],1,0},
		["Routes Attempted"] = {databaseStats[nameToI["Routes Attempted"]],0,0},
		["Routes Completed"] = {databaseStats[nameToI["Routes Completed"]],10,0},
		["Money Collected From Fare"] = {databaseStats[nameToI["Money Collected From Fare"]],0,0},
		["Money Earned from Routes"] = {databaseStats[nameToI["Money Earned from Routes"]],0,0},
		["Died on Job off Route"] = {databaseStats[nameToI["Died on Job off Route"]],0,0},
		["Died on Job on Route"] = {databaseStats[nameToI["Died on Job on Route"]],0,0},
		["Total Bus Route Distance Traveled"] = {databaseStats[nameToI["Total Bus Route Distance Traveled"]],0,0},
		["Times someone has refused fare"] = {databaseStats[nameToI["Times someone has refused fare"]],0,0,},
		["Times someone couldn't afford fare"] = {databaseStats[nameToI["Times someone couldn't afford fare"]],0,0},
		["Times someone paid full fare"] = {databaseStats[nameToI["Times someone paid full fare"]],0,0},
		["Times freeloaders entered for free"] = {databaseStats[nameToI["Times freeloaders entered for free"]],0,0},
	}
	totalRankPoints = 0
	totalPoints = 0
	for k,v in pairs(stats) do
		local ptsToAdd = (tonumber(v[1])*tonumber(v[2]))
		totalRankPoints=totalRankPoints+ptsToAdd
		stats[k][3] = ptsToAdd
		totalPoints=totalPoints+tonumber(v[1])
		local row = guiGridListAddRow(gui["listStats"])
		guiGridListSetItemText(gui["listStats"], row, 1, ""..tostring(k).."", false, false )
		guiGridListSetItemText(gui["listStats"], row, 2, ""..stats[k][1].."", false, false )
		guiGridListSetItemText(gui["listStats"], row, 3, ""..stats[k][2].."", false, false )
		guiGridListSetItemText(gui["listStats"], row, 4, ""..stats[k][3].."", false, false )
		if v[2] > 0 then
			for i=1,4 do
				guiGridListSetItemColor(gui["listStats"],row,i,0,255,0)
			end
		end
	end
	guiSetText(gui["lblTotalPoints"],"Total Points: "..totalPoints.."")
	guiSetText(gui["lblTotalRankPoints"],"Total Rank Points: "..totalRankPoints.."")
end

local first = true

function updateRanksMenu()
	guiGridListClear(gui["listRanks"])
	for k,v in pairs(ranks) do
		ranks[k][3] = totalRankPoints-tonumber(ranks[k][2])
	end

	local currentRank = ""
    for k,v in pairs(ranks) do
		local needed = tonumber(v[2])
        if totalRankPoints > needed then
            ranks[k][3] = "+"..tostring((totalRankPoints-needed))..""
            currentRank = ranks[k][1]
			rankI = k
        elseif totalRankPoints < needed then
            ranks[k][3] = "-"..tostring((needed-totalRankPoints))..""
        elseif totalRankPoints == needed then
            ranks[k][3] = "0"
            currentRank = ranks[k][1]
			rankI = k
        end
    end
	guiSetText(gui["lblCurrentRank"],"Rank: "..currentRank.."")
	for k,v in pairs(ranks) do
		local row = guiGridListAddRow(gui["listRanks"])
		guiGridListSetItemText(gui["listRanks"], row, 1, tostring(v[1]), false, false )
		guiGridListSetItemText(gui["listRanks"], row, 2, tostring(v[2]), false, false )
		guiGridListSetItemText(gui["listRanks"], row, 3, tostring(v[3]), false, false )
		guiGridListSetItemText(gui["listRanks"], row, 4, tostring(v[4]), false, false )
		if v[1] == currentRank then
			for i=1,4 do
				guiGridListSetItemColor(gui["listRanks"],row,i,0,255,0)
			end
		end
	end
	if first == true then
		--triggerServerEvent("CSGbusDriverNewRank",localPlayer,totalRankPoints)
		first = false
		rank = currentRank
	end
	if rank ~= currentRank then
		exports.DENdxmsg:createNewDxMessage("Congratulations! You have been promoted to "..currentRank.."!",0,255,0)
		rank = currentRank
		triggerServerEvent("CSGbusDriverNewRank",localPlayer,totalRankPoints)
	end

end

function showGUI()
	if getPlayerTeam(localPlayer) == "Unoccupied" then return end
	if routes[1] == "justStarted" then  exports.DENdxmsg:createNewDxMessage("Please wait a few moments before using your panel",255,255,0) return end
	guiSetVisible(gui["_root"],true)
	showCursor(true)
	refresh()
end

function hideGUI()
	guiSetVisible(gui["_root"],false)
	showCursor(false)
end

addEvent("onPlayerJobChange",true)
function jobChange(nJob,oldJob)
	if oldJob == "Bus Driver" then
		quitBusDriver()
	end
end
addEventHandler("onPlayerJobChange",root,jobChange)

local objects = {}
local objects2 = {}
function recRoutes(t,ds)
	--if ds == nil then allowSetStats = false end
	databaseStats = fromJSON(ds)
	--if databaseStats == nil then allowSetStats = false end

	if databaseStats == nil or databaseStats[1] == nil then
		setDefaults()
	end
    routes = t
	for k,v in pairs(routes) do
		local t = v
		for k2,v2 in ipairs(t) do
			local object = createObject(1229, v2[1],v2[2],v2[3]+1.3)
			local r1,r2 = getElementRotation(object)
			local r3 = v2[5]+180
			setElementRotation(object,r1,r2,r3)
			setElementCollisionsEnabled(object,false)
			setObjectBreakable(object,false)
			table.insert(objects,object)
		end
	end
	for k,v in pairs(objects) do
		for k2,v2 in pairs(objects) do
			if v ~= nil then
				if v ~= v2 then
					local x1,y1,z1 = getElementPosition(v)
					local x2,y2,z2 = getElementPosition(v2)
					local dist = getDistanceBetweenPoints3D(x1,y1,z1,x2,y2,z2)
					if dist < 5 then
						table.insert(objects2,v)
						objects[k] = nil
					end
				end
			end
		end
	end
	for k,v in pairs(objects2) do
		if isElement(v) then
			destroyElement(v)
		end
	end
end
addEvent("recRoutes", true)
addEventHandler("recRoutes", localPlayer, recRoutes)
--setTimer(function() triggerServerEvent("sendRoutes", localPlayer) end,5000,1)

function death()
    if exports.server:getPlayerOccupation() == "Bus Driver" then

	if jobInProgress == 1 then
		addStat("Died on Job on Route",1)
	else
		addStat("Died on Job off Route",1)
	end
    endAssignment()
    --triggerServerEvent("setStatBusdriver", localPlayer,"busdriverDiedOnJob",1)
    end
end

function busExplode()
    if source == bus then
        endAssignment()
    end
end
addEventHandler("onClientPlayerWasted", localPlayer, death)
addEventHandler("onClientVehicleExplode", root, busExplode)

function quitBusDriver()
    --exports.CSGhelp:setBottomTextClient("You are no longer a Bus Driver", 255,255,255,255,localPlayer)
    endAssignment()
end
addEvent("quitBusDriver", true)
addEventHandler("quitBusDriver", root, quitBusDriver)

if exports.server:getPlayerOccupation() == "Bus Driver" then
     exports.DENdxmsg:createNewDxMessage("Press [F5] to access the Bus Driver Control Panel.",0,255,0)
end

function setFare(commandName, price)
    if exports.server:getPlayerOccupation() == "Bus Driver" then
		if getTeamName(getPlayerTeam(localPlayer)) ~= "Civilian Workers" then return end
        if (price) then
          if type(tonumber(price)) == "number" then
            if tonumber(price) >= minfare and tonumber(price) <= maxfare then
                triggerServerEvent("CSGbusdriverNewFare",localPlayer,price)
				local veh = getPedOccupiedVehicle(localPlayer)
				if veh ~= false then
					local model = getElementModel(veh)
					if model == 431 or model == 437 then
						if getVehicleController(veh) == localPlayer then
							if guiCheckBoxGetSelected(cbVoice) == true then
								triggerServerEvent("CSGbusDriverSayVoice",localPlayer,"Please note: The Fare has been changed to $"..price..". Only new Passengers will be affected.",true)
							end
						end
					end
				end
                fare = price
                if isElement(gui["lblTopName"]) then
                guiSetText(gui["lblTopName"],""..getPlayerName(localPlayer).." --- Fare: $"..fare.."")
                end
                 exports.DENdxmsg:createNewDxMessage("Fare set to $"..fare.."",0,255,0)
            else
                 exports.DENdxmsg:createNewDxMessage("Fare exceeds the maximum or is below the minimum allowed of this land.",255,0,0)
            end
          else
             exports.DENdxmsg:createNewDxMessage("Only enter numbers in the fare. Usage: /setfare 100",255,255,0)
          end
        else
         exports.DENdxmsg:createNewDxMessage("Usage: /setfare 100",255,255,0)
        end
    end
end
addCommandHandler("setfare", setFare)

function setDefaults()
	local default = {}
	for i=1,12 do default[i] = 0 end
	databaseStats = default
	triggerServerEvent("CSGbusDriverSetStat",localPlayer,"Bus Stops Arrived To",0,"","",databaseStats)
end

local mapList = {}
function map(commandName,...)
	local arg = {...}
	local stringWithAllParameters = table.concat( arg, " " )
    local x,y,z = getElementPosition(localPlayer)
	local z = getGroundPosition(x,y,z)
	local r1,r2,r3 = getElementRotation(localPlayer)
	local rot = r3
   local t = {x,y,z,'"'..stringWithAllParameters..'"',rot}
   table.insert(mapList,t)
end
addCommandHandler("bsmap",map)

function printMapped()
    for k,v in pairs(mapList) do
        outputChatBox("{"..v[1]..","..v[2]..","..v[3]..","..v[4]..","..v[5].."},")
    end
    mapList = {}
end
addCommandHandler("bsprint",printMapped)


build_MainWindow()
guiSetVisible(gui["_root"],false)

if fileExists("ppBusdriver_c.lua") == true then
	fileDelete("ppBusdriver_c.lua")
end
--[[
function encryptString(cmd,str,code)
	-- character table
    chars='1234567890!@#$%^&*()qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM ,<.>/?;:"[{]}\|`~'
	-- new code begin
    newcode=""
	-- we start
    for i=1, 999 do
        if string.sub(str,i,i) == "" then
            break
        else
			com=string.sub(str,i,i)
		end
        for x=1, 90 do
			cur=string.sub(chars,x,x)
			if com == cur then
				new=x+code
				while new > 90 do
					new = new - 90
				end
				newcode=""..newcode..""..string.sub(chars,new,new)..""
			end
		end
    end
	outputChatBox(newcode)
    return newcode
end
addCommandHandler("bs2",encryptString)

function unencryptString(str,code)
	-- character table
    chars='1234567890!@#$%^&*()qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM ,<.>/?;:"[{]}\|`~'
	-- new code begin
    newcode=""
	-- we start
    for i=1, 999 do
        if string.sub(str,i,i) == "" then
            break
        else
			com=string.sub(str,i,i)
		end
        for x=1, 90 do
			cur=string.sub(chars,x,x)
			if com == cur then
				new=x-code
				while new < 0 do
					new = new + 90
				end
				newcode=""..newcode..""..string.sub(chars,new,new)..""
			end
		end
    end
    --print("you old string is: "..newcode.."")
    return newcode
end
--]]

txd = engineLoadTXD ( "coach.txd" )
engineImportTXD ( txd, 437 )
