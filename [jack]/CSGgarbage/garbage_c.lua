--job cord: 2202.110351, -1973.538085, 14.5573654
garbageCollectionLS = {
{2700.2451171875,-1091.09765625,68.174263000488},
{2654.6669921875,-1090.7958984375,68.433517456055},
{2647.423828125,-1125.5458984375,64.898483276367},
{2637.93359375,-1215.916015625,48.84375},
{2647.4306640625,-1279.8779296875,46.357883453369},
{2638.1123046875,-1349.76953125,33.73388671875},
{2656.3251953125,-1400.0947265625,29.282205581665},
{2673.2001953125,-1438.603515625,29.361944198608},
{2683.513671875,-1484.37109375,29.41131401062},
{2711.1376953125,-1513.0322265625,29.291913986206},
{2718.103515625,-1547.080078125,24.669759750366},
{2742.0498046875,-1592.9541015625,12.692163467407},
{2718.6044921875,-1643.6328125,11.998224258423},
{2754.1630859375,-1662.09765625,11.68385887146},
{2802.8447265625,-1652.7158203125,9.6953125},
{2818.767578125,-1640.45703125,9.7552852630615},
{2857.091796875,-1569.2978515625,9.921875},
{2865.2841796875,-1505.587890625,9.8483829498291},
{2828.9033203125,-1483.8564453125,11.994320869446},
{2769.4345703125,-1493.0869140625,26.676445007324},
{2729.7421875,-1470.2509765625,29.453125},
{2717.94921875,-1414.099609375,32.242336273193},
{2742.275390625,-1332.36328125,47.004371643066},
{2720.310546875,-1275.1064453125,57.332607269287},
{2688.1748046875,-1261.9619140625,54.900177001953},
{2607.080078125,-1251.7412109375,46.928630828857},
{2575.7919921875,-1284.7509765625,44.9609375},
{2575.5,-1377.208984375,29.977701187134},
{2555.8779296875,-1441.11328125,22.822380065918},
{2533.8544921875,-1508.8857421875,22.832313537598},
{2478.7998046875,-1499.607421875,22.828125},
{2440.837890625,-1509.0009765625,22.824731826782},
{2426.25390625,-1476.06640625,22.828125},
{2476.4921875,-1439.6328125,24.064161300659},
{170.0693359375,-1549.8955078125,11.024687767029},
{2555.58984375,-1449.1162109375,32.856342315674},
{206.6318359375,-1461.2080078125,11.883076667786},
{2615.9521484375,-1439.7021484375,31.111324310303},
{2506.939453125,-1411.587890625,27.359375},
{2516.5302734375,-1355.5,27.359375},
{2507.037109375,-1272.9658203125,33.709674835205},
{325.1484375,-1404.048828125,13.111462593079},
{2532.4794921875,-1252.2060546875,36.822612762451},
{391.107421875,-1346.3564453125,13.583962440491},
{473.1875,-1312.759765625,14.343193054199},
{2575.744140625,-1233.9609375,48.088405609131},
{492.1474609375,-1275.0166015625,14.599143981934},
{2568.720703125,-1179.5634765625,60.713417053223},
{2629.8720703125,-1188.8017578125,64.407623291016},
{2704.4501953125,-1179.234375,68.244110107422},
{661.8359375,-1201.2802734375,17.082778930664},
{2718.03125,-1135.853515625,68.4140625},
{639.7412109375,-1256.0693359375,15.865947723389},
{2741.1630859375,-1090.2216796875,68.4140625},
{2742.400390625,-1189.3642578125,68.2421875},
{614.8642578125,-1315.6962890625,12.945016860962},
{2742.2880859375,-1244.7216796875,59.141025543213},
{540.640625,-1338.67578125,13.392511367798},
{458.2099609375,-1372.6025390625,21.992847442627},
{2783.9384765625,-1253.3779296875,46.357257843018},
{394.125,-1403.171875,33.048046112061},
{2792.3125,-1335.4189453125,30.04660987854},
{2821.9404296875,-1381.7587890625,17.028694152832},
{333.9482421875,-1462.255859375,33.260467529297},
{2870.81640625,-1405.9384765625,9.9261512756348},
{259.837890625,-1476.7548828125,26.513862609863},
{2870.662109375,-1468.2802734375,9.7890625},
{220.2841796875,-1511.6318359375,18.007131576538},
{2859.9052734375,-1327.7568359375,9.8889541625977},
{2851.5966796875,-1282.7607421875,18.548027038574},
{2839.083984375,-1204.4384765625,22.933841705322},
{249.6376953125,-1557.7626953125,31.928722381592},
{2833.7255859375,-1125.8505859375,23.726879119873},
{269.6142578125,-1638.115234375,32.143936157227},
{2838.9638671875,-1081.1982421875,22.382511138916},
{337.439453125,-1605.6259765625,32.024047851562},
{2794.5595703125,-1044.3046875,31.217079162598},
{2719.8974609375,-1052.728515625,58.488906860352},
{357.2431640625,-1509.49609375,31.878330230713},
{2647.93359375,-1042.8525390625,68.4140625},
{420.8359375,-1482.044921875,29.501239776611},
{2573.64453125,-1052.25390625,68.532127380371},
{480.783203125,-1443.3486328125,19.204948425293},
{482.0341796875,-1488.55078125,19.00271987915},
{2514.435546875,-1096.45703125,52.751777648926},
{506.30078125,-1556.80859375,15.721466064453},
{2424.169921875,-1081.84375,40.391174316406},
{471.77734375,-1597.1630859375,23.728580474854},
{2353.603515625,-1112.6171875,30.225240707397},
{399.5712890625,-1579.05859375,27.054651260376},
{2337.701171875,-1158.6875,25.908004760742},
{2396.9833984375,-1148.8125,28.136362075806},
{2495.47265625,-1145.4560546875,37.529312133789},
{455.8173828125,-1531.8759765625,28.648941040039},
{2523.1572265625,-1189.1943359375,54.325790405273},
{186.4580078125,-1592.171875,12.933232307434},
{2450.7265625,-1179.0751953125,35.546875},
{2381.1123046875,-1178.9384765625,26.406860351562},
{222.6806640625,-1671.6748046875,10.468109130859},
{2366.119140625,-1223.390625,26.4296875},
{2391.875,-1256.4013671875,22.826530456543},
{358.8232421875,-1720.8994140625,5.7184252738953},
{2427.3671875,-1253.7177734375,22.826709747314},
{467.2373046875,-1717.919921875,9.801082611084},
{2446.298828125,-1295.74609375,22.823774337769},
{558.16796875,-1715.626953125,12.173630714417},
{2455.734375,-1410.1142578125,22.82918548584},
{626.0732421875,-1748.9287109375,12.254556655884},
{2386.62890625,-1424.83203125,22.8359375},
{642.3388671875,-1685.029296875,13.9808177948},
{625.708984375,-1637.6962890625,15.055128097534},
{587.306640625,-1579.8232421875,15.015621185303},
{2375.7080078125,-1368.6953125,22.829145431519},
{2366.3525390625,-1315.2216796875,22.8359375},
{2355.7392578125,-1301.5625,22.87738609314},
{623.8701171875,-1515.9462890625,13.869906425476},
{641.11328125,-1426.2958984375,12.761135101318},
{2307.9892578125,-1253.28515625,22.844680786133},
{641.58203125,-1384.07421875,12.557728767395},
{2249.9248046875,-1136.9736328125,25.214651107788},
{581.3701171875,-1413.4521484375,12.965174674988},
{2194.0791015625,-1129.185546875,24.144659042358},
{543.0283203125,-1488.0087890625,13.289991378784},
{2170.8408203125,-1168.83203125,23.49188041687},
{2177.044921875,-1253.7783203125,22.8203125},
{690.4130859375,-1133.0361328125,15.392776489258},
{2116.7421875,-1305.3388671875,22.842042922974},
{2062.353515625,-1320.2080078125,22.8203125},
{750.103515625,-1070.7880859375,22.4411277771},
{801.66015625,-1110.6328125,22.65625},
{2117.349609375,-1388.9658203125,22.828125},
{793.296875,-1230.7978515625,13.381719589233},
{2217.212890625,-1379.7275390625,22.828125},
{800.9072265625,-1310.5166015625,12.3828125},
{2307.40234375,-1388.8046875,22.86709022522},
{2308.625,-1335.486328125,22.842468261719},
{792.572265625,-1384.1591796875,12.518239974976},
{747.7890625,-1390.740234375,12.495047569275},
{2233.205078125,-1296.158203125,22.82911491394},
{703.728515625,-1410.1953125,12.396191596985},
{2220.6259765625,-1216.1640625,22.837087631226},
{680.7080078125,-1324.0341796875,12.536504745483},
{2127.6005859375,-1225.4736328125,22.819301605225},
{746.833984375,-1315.7998046875,12.390625},
{2076.5283203125,-1193.298828125,22.687143325806},
{2062.3837890625,-1107.009765625,23.434368133545},
{2018.951171875,-1061.5126953125,23.484998703003},
{799.1591796875,-1466.279296875,12.3828125},
{2116.0537109375,-1083.3037109375,23.494407653809},
{1971.1318359375,-1085.0546875,24.073181152344},
{771.1962890625,-1554.5791015625,12.381435394287},
{726.353515625,-1582.267578125,13.25395488739},
{1973.939453125,-1177.390625,24.937408447266},
{660.1357421875,-1591.1435546875,13.556911468506},
{1979.34765625,-1265.1455078125,22.8203125},
{758.703125,-1747.05859375,11.419512748718},
{2041.6962890625,-1265.47265625,22.8203125},
{749.96875,-1694.9248046875,3.528450012207},
{756.04296875,-1621.4599609375,9.5153741836548},
{2028.8828125,-1131.1923828125,23.51275062561},
{1931.6591796875,-1140.3779296875,24.106771469116},
{1871.5283203125,-1112.7666015625,22.670925140381},
{814.859375,-1787.9326171875,12.613700866699},
{1895.130859375,-1036.65234375,22.6796875},
{897.5771484375,-1767.7177734375,12.3828125},
{1990.5517578125,-1014.3720703125,25.61364364624},
{914.0693359375,-1702.76953125,12.370300292969},
{2042.9169921875,-983.08203125,41.778396606445},
{922.48046875,-1599.4921875,12.546875},
{2144.681640625,-995.5556640625,60.681041717529},
{858.318359375,-1586.505859375,12.3828125},
{827.349609375,-1630.529296875,12.3828125},
{2268.3447265625,-1067.828125,47.29434967041},
{913.265625,-1491.2314453125,12.37345790863},
{921.162109375,-1424.8740234375,12.272157669067},
{2405.861328125,-1038.4404296875,50.319328308105},
{889.7158203125,-1390.9697265625,12.275562286377},
{834.3583984375,-1410.302734375,12.222501754761},
{2470.3935546875,-1040.7109375,62.145725250244},
{1842.2548828125,-1309.80859375,12.39070224762},
{1856.8447265625,-1448.87890625,12.404023170471},
{1952.8388671875,-1468.755859375,12.3828125},
{1991.1201171875,-1384.025390625,22.481510162354},
{2066.28515625,-1470.4482421875,21.012725830078},
{1022.4755859375,-1410.0830078125,12.0446434021},
{2132.62109375,-1432.83203125,22.828125},
{1044.4345703125,-1391.7626953125,12.418974876404},
{1066.2998046875,-1357.099609375,12.3828125},
{2108.228515625,-1537.7265625,23.187591552734},
{1049.7236328125,-1297.1572265625,12.3828125},
{2112.2724609375,-1705.224609375,12.389234542847},
{2076.859375,-1796.5712890625,12.546875},
{1063.8212890625,-1231.89453125,15.628591537476},
{2085.2451171875,-1865.4541015625,13.109202384949},
{2117.9140625,-1889.8056640625,12.295926094055},
{1050.76953125,-1161.73046875,22.69965171814},
{1015.9765625,-1152.4091796875,22.65625},
{2272.671875,-1898.8212890625,12.303449630737},
{901.1005859375,-1137.328125,22.691129684448},
{2322.9453125,-1975.66015625,12.338983535767},
{818.771484375,-1152.5849609375,22.714061737061},
{2211.732421875,-1975.6650390625,12.337635993958},
{2235.4833984375,-2134.9189453125,12.300641059875},
{2060.2431640625,-2114.5068359375,12.356120109558},
{1123.146484375,-1409.3095703125,12.426302909851},
{1180.0791015625,-1391.2109375,12.308746337891},
{1252.7587890625,-1409.22265625,12.01050567627},
{1866.6064453125,-1747.8076171875,12.3828125},
{1630.9326171875,-1728.228515625,12.3828125},
{1306.591796875,-1391.42578125,12.296621322632},
{1329.89453125,-1477.6435546875,12.3828125},
{1370.1064453125,-1736.6279296875,12.3828125},
{1317.0654296875,-1562.6064453125,12.3828125},
{1361.85546875,-1283.1142578125,12.3828125},
{1353.5888671875,-1163.1513671875,22.737308502197},
{1294.4443359375,-1692.015625,12.3828125},
{1216.0205078125,-1136.8701171875,22.714742660522},
{1293.9814453125,-1786.3408203125,12.3828125},
{958.1728515625,-1069.2587890625,24.99143409729},
{1059.0380859375,-1829.4150390625,12.566982269287},
{1027.3642578125,-1044.029296875,30.464128494263},
{966.1416015625,-1792.6357421875,13.102186203003},
{1176.470703125,-1035.3076171875,30.802951812744},
{1043.7275390625,-1944.572265625,11.967844009399},
{1410.4189453125,-1038.4052734375,22.783885955811},
{1055.966796875,-2062.6728515625,11.970882415771},
{1566.935546875,-1073.6865234375,22.534742355347},
{1602.94921875,-1162.021484375,22.90625},
{1821.1826171875,-1175.8671875,22.828125},
{1709.93359375,-1257.3203125,12.390546798706},
{1719.4638671875,-1394.935546875,12.3828125},
{1706.1884765625,-1506.12890625,12.389270782471},
{1816.7783203125,-1660.32421875,12.452918052673},
{1587.9384765625,-1588.431640625,12.3828125},
{1826.2255859375,-1739.1171875,12.3828125},
{1474.0009765625,-1596.6728515625,12.3828125},
{1142.6513671875,-1567.5048828125,12.2734375},
{1018.5478515625,-1575.626953125,12.3828125},
{1032.53515625,-1657.70703125,12.466917991638},
{1111.3681640625,-1714.89453125,13.114261627197},
{1243.5625,-1707.55078125,12.3828125},
{1198.63671875,-1848.3818359375,12.393355369568},
{1170.1591796875,-1805.65625,12.3984375},
{952.1767578125,-1331.935546875,12.379835128784},
}

---------------------------------------
trashDropPosLsX,trashDropPosLsY,trashDropPosLsZ = 2172.18652,-1982.59375,12.55138
trash = {} --later feature
trashElements = {}
dropMarkers = {}

totalMarkers = 0 --debug line
toggleTimer = nil
trashJobInProgress = false
render = false
dropoffMarkerSpawned = false

totalUnits = 0 --not synced to serverside

addEventHandler("onClientResourceStart",resourceRoot,
function()
	toggleTimer = setTimer(checkForJob,1000,0,localPlayer) --loop this, helpful to start / stop trash job process.
	if garbageCollectionLS then
		--outputDebugString("[TRASH] LS positions loaded!")
	else
		--outputDebugString("[TRASH] Failed to load LS positions!",1)
	end
end)

function checkForJob(player)
	if player then
		if not getPlayerTeam(player) then return false end
		team = getTeamName(getPlayerTeam(player))
		if (team == "Civilian Workers") and (getElementData(player,"Occupation") == "Trash Collector") then
			checkForTrashJob(localPlayer,true)
			createDropoffMarker(true)
		else
			checkForTrashJob(localPlayer,false)
			createDropoffMarker(false)
		end
	end
end

function createDropoffMarker(state)
	if state == true then
		if not dropoffMarkerSpawned == true then
			--if trashDropPosLS then --and trashDropPosSF then <-- later use.
				dropoffMarkerLS = createMarker(trashDropPosLsX,trashDropPosLsY,trashDropPosLsZ,"cylinder",4,255,0,255)
				blipDropOff = createBlipAttachedTo(dropoffMarkerLS,46,2,0,255,0,255,0,9999)

				dropoffMarkerSpawned = true
			--end
		else
			return
		end
	elseif state == false then
		if not dropoffMarkerSpawned == false then
			--if dropoffMarkerLS then
				destroyElement(dropoffMarkerLS)
				destroyElement(blipDropOff)
				dropoffMarkerSpawned = false
				destroyElement(blip)
				destroyElement(trashMarker)
				trashJobInProgress=false
			--end
		else
			return
		end
	else
		--outputDebugString("[TRASH] Incorrect state passed (true/false only.)")
	end
end

function checkForTrashJob(player,state)
	--outputDebugString("trash job called")
	if not player then return false end
	if state == true then
		--outputDebugString("Attempting to continue through script")
		if (getTeamName(getPlayerTeam(player)) == "Civilian Workers") and (getElementData(player,"Occupation") == "Trash Collector") then
			--outputDebugString("Check passed, continuing...")
			if not trashJobInProgress == true then
				--outputDebugString("No current job progress found, continuing...")
				x,y,z = getElementPosition(player)
				city = getZoneName(x, y, z, true)

				--outputDebugString("[TRASH] Getting City...")
				if city == "Los Santos" then
					t = #garbageCollectionLS
					--outputDebugString("[TRASH] LS city found!")
				elseif city == "San Fierro" then
					return false --because SF support isn't ready
					--outputDebugString("[TRASH] Sf city found!")
				else
					return false --LV isn't allowed.
				end
				jobCord = math.random(1,t)
				if type(jobCord) == "number" then
					trashMarker = createMarker(garbageCollectionLS[jobCord][1], garbageCollectionLS[jobCord][2], garbageCollectionLS[jobCord][3],"cylinder",4,255,255,0)
					blip = createBlipAttachedTo(trashMarker, 0, 3, 255, 0, 0, 255, 0, 99999)
					--outputDebugString("Trying to create trash marker")
					trashJobInProgress = true
					if isElement(trashMarker) == true and isElement(blip) == true then
						exports.DENdxmsg:createNewDxMessage("HQ: A trash pickup location has been added to your map.", 0, 255, 0)
						--outputDebugString("trash marker done!")
						trashElements[trashMarker] = blip --elements table.
						--exports.DENdxmsg:createNewDxMessage("There was a recent call from HQ that there trash dumped on side of the road, go pick it up.",255,0,0)
					else
						--outputDebugString("Failed to create marker and blip")
					end
				end
			else
				return --don't start another..
			end
		else
			return --he aint on the job, return..
		end
	elseif state == false then --turn it off
			if trashElements then
			for k,v in ipairs(trashElements) do
				destroyElement(trashElements[v][1])
				destroyElement(trashElements[v][2])
			end
		end
	else
		--outputDebugString("[TRASH] Incorrect state passed (true/false only.)")
	end
end

addEventHandler("onClientMarkerHit",root,
function(hitElement,matchingDim)
	if (hitElement == localPlayer) then --checker
		if source == trashMarker then --trash pickup marker
			vehicle = getPedOccupiedVehicle(hitElement)
			driver = getVehicleOccupant(vehicle,0)
			if driver == hitElement then --check see if we have the right guy..
				--outputDebugString("Correct guy found, continuing...")
				if (getElementModel(vehicle) == 408) then
					setElementFrozen(vehicle, true)
					exports.CSGprogressbar:createProgressBar("Collecting...", 50, "CSGTrash.addTrashUnit")
					--outputDebugString("Proceeding..")
					--marker

					destroyElement(blip)
					trashElements[source] = nil

					destroyElement(source)

				end

			else
				return
			end
		elseif source == dropoffMarkerLS or dropoffMarkerSF then --dropoff markers in LS and SF
			if (getTeamName(getPlayerTeam(hitElement)) == "Civilian Workers") and (getElementData(hitElement,"Occupation") == "Trash Collector") then
				if (getElementModel(getPedOccupiedVehicle(hitElement)) == 408) then
					if (totalUnits >= 5) then
						exports.CSGprogressbar:createProgressBar("Dumping...",50,"CSGTrash.Dropjunkoff")
						setElementFrozen(getPedOccupiedVehicle(hitElement),true)
						setElementFrozen(hitElement,true)
					else
						outputChatBox("You must have atleast 5 units of trash to dump!",255,0,0)
					end
				end
			else
				return
			end
		end
	end
end)

function toggleRenderGUI(state)
	if state == true then
		if render == false then
			addEventHandler("onClientRender",root,drawText)
			render = true
		else
			return
		end
	elseif state == false then
		if render == true then
			removeEventHandler("onClientRender",root,drawText)
			render = false
		else
			return
		end
	else
		--outputDebugString("Incorrect state passed.")
	end
end

addEvent("CSGTrash.Dropjunkoff",true)
addEventHandler("CSGTrash.Dropjunkoff", root,
	function ()
		vehicle = getPedOccupiedVehicle(localPlayer)
		if not vehicle then return end
		player = getVehicleOccupant(vehicle)
		if player == localPlayer then --its the driver
			triggerServerEvent("onGarbageDropoff", root, localPlayer, vehicle, totalUnits)
			setElementFrozen(vehicle, false)
			setElementFrozen(localPlayer, false)
			--outputDebugString("[TRASH] Attempting to pay "..getPlayerName(hitElement))
			totalUnits = 0
		else
			outputChatBox("You're not in the vehicle, trash wasn't dumped!", 255, 0, 0)
			return --stop here because he jumped out.
		end
	end
)

function addUnitToVehicle(hitElement, matchingDimension)
	--outputDebugString("Marker hit, proceeding...")
	if not hitElement == localPlayer then return false end

	vehicle = getPedOccupiedVehicle(hitElement)
	driver = getVehicleOccupant(vehicle, 0)
	if driver == localPlayer then --check see if we have the right guy..
		--outputDebugString("Correct guy found, continuing...")
		if (getElementModel(vehicle) == 408) then
			setElementFrozen(vehicle, true)
			exports.CSGprogressbar:createProgressBar("Collecting...", 50, "CSGTrash.addTrashUnit")
			--outputDebugString("Proceeding..")
			destroyElement(markers[source])
			destroyElement(blip)--blip
			markers[source] = nil
		end
	else
		return
	end
end

addEvent("CSGTrash.addTrashUnit", true)
addEventHandler("CSGTrash.addTrashUnit", root,
	function ()
		triggerServerEvent("addTrashUnits", localPlayer, getPedOccupiedVehicle(localPlayer), 1)
		trashJobInProgress = false

		totalUnits = totalUnits + 1
		exports.DENdxmsg:createNewDxMessage("Trash collected, new amount: "..totalUnits, 0, 255, 0)
		setElementFrozen(getPedOccupiedVehicle(localPlayer), false)
		setElementFrozen(localPlayer, false)
		--redrawText()
	end
)

function drawText()
	local screenWidth, screenHeight = guiGetScreenSize()
	local vehicle = getPedOccupiedVehicle(localPlayer)
	if (vehicle) then
		if getElementModel(vehicle) == 408 then
			else
			return
		end
	else
		return
	end

	exports.CSGpriyenmisc:dxDrawColorText("#00CC99Trash Units: #33FF33"..totalUnits.."", screenWidth*0.08, screenHeight*0.95, screenWidth, screenHeight, tocolor ( 0, 0, 0, 255 ), 1.02, "pricedown" )
end
addEventHandler("onClientRender", root, drawText)
